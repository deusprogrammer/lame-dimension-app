let express,mongoose,cors,passport,jwtAuthStrategy,scriptsRoute,authRoute,userRoute,profileRoute;_234‍.w("express",[["default",["express"],function(v){express=v}]]);_234‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_234‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_234‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_234‍.w("./config/passportConfig",[["jwtAuthStrategy",["jwtAuthStrategy"],function(v){jwtAuthStrategy=v}]]);_234‍.w("./routes/scriptRoutes",[["default",["scriptsRoute"],function(v){scriptsRoute=v}]]);_234‍.w("./routes/authRoutes",[["default",["authRoute"],function(v){authRoute=v}]]);_234‍.w("./routes/userRoutes",[["default",["userRoute"],function(v){userRoute=v}]]);_234‍.w("./routes/profileRoutes",[["default",["profileRoute"],function(v){profileRoute=v}]]);










let app = express();
let port = process.env.PORT || 8080;

// Mongoose instance connection url connection
const databaseUrl = process.env.LD_DB_URL;
mongoose.Promise = global.Promise;

_234‍.g.console.log('DATABASE URL: ' + databaseUrl);

/*
 * Connect to database
 */

var connectWithRetry = function () {
    return mongoose.connect(databaseUrl, function (err) {
        if (err) {
            console.warn(
                'Failed to connect to mongo on startup - retrying in 5 sec'
            );
            setTimeout(connectWithRetry, 5000);
        }
    });
};
connectWithRetry();

passport.use(jwtAuthStrategy);

app.use(express.json({ limit: '50Mb' }));
app.use(cors());
app.use('/assets', express.static(__dirname + '/assets'));

app.use(passport.initialize());

app.set('etag', false);
app.use((req, res, next) => {
    res.set('Cache-Control', 'no-store');
    next();
});

/*
 * Routes
 */
app.use('/auth', authRoute);
app.use('/users', userRoute);
app.use(
    '/profiles',
    passport.authenticate('jwt', { session: false }),
    profileRoute
);
app.use(
    '/scripts',
    passport.authenticate('jwt', { session: false }),
    scriptsRoute
);

app.listen(port);
_234‍.g.console.log('Lame Dimension API server started on: ' + port);
